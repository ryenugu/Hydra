@using Hydra.Controllers
@using PagedList.Mvc;

@using PagedList;
@{
    ViewBag.Title = "Product Listing";
}
@{
    ViewBag.Title = "Title";

    //    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "name";
    }
}

<div class="container">
    <p>
        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
        {
            @Html.TextBox("searchParam")<input type="submit" value="search" />
        }
    </p>
</div>

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />
<div class="table-responsive">
    <table class="table table-striped table-condensed table-hover">
        <tr>
            <th>
                @Html.ActionLink("Code", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.CodeSortParam))
                @Html.SortIdentifier(currentSort, "code")
            </th>
            <th>
                @Html.ActionLink("Name", "Index", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.NameSortParam))
                @Html.SortIdentifier(currentSort, "name")
            </th>
        </tr>

        <!-- loop through each of your products and display it however you want. we're just printing the name here -->

        @foreach (var product in (IEnumerable<MyHeader>) ViewBag.OnePageOfProducts)
        {
            <tr>
                <td>
                    @Html.ActionLink((string) product.Code.Trim(), "Showcase", new {id = product.Code.Trim()})
                </td>
                <td>
                <table class="table-condensed">
                    <tr>
                        <td>
                            <b>Name:</b>
                        </td>
                        <td> @product.Name</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Universe:</b>
                        </td>
                        <td>@product.HCAUniverse</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Index:</b>
                        </td>
                        <td>@product.PBMID</td>
                    </tr>

                    <tr>
                        <td>
                            <b>Most Recent Return Date:</b>
                        </td>
                        <td>
                            <b>@product.RRD</b>
                        </td>
                    </tr>
                </table>
            </tr>
        }
    </table>
</div>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager((IPagedList) ViewBag.OnePageOfProducts, page => Url.Action("Index", new {page}))